
proc trace_unclocked_pins { fin } {
    set fp [ open $fin r ]
    set fo [ open "unclocked_trace.rpt" w ]
    set unclocked_pins [ list ]
    set max_length 0
    while { [gets $fp line] >= 0 } {
        if { [regexp  "Information: Checking 'no_clock'." $line ] } {
                while { [gets $fp line] >= 0 } {
                    if { [regexp "^Information:" $line ] } {
                        break
                    }
                    if { [regexp "^<" $line ] || [regexp "^Warning:" $line ] || [regexp "^----" $line] || [regexp "Clock Pin" $line ] || $line == "" }  {
                        # ignore other lines
                    } else {
                        set pin [ lindex $line 0 ]
                        if { [string length $pin] > $max_length } {
                            set max_length [string length $pin]
                        }
                        lappend unclocked_pins $pin
                    }
                }
        }
    }
    close $fp
    puts [format "%-${max_length}s\t|" Pin ]
    foreach p $unclocked_pins {
        set fin [ all_fanin -trace_arcs all -flat -startpoints_only -to $p ]
        set ports [ get_ports -quiet $fin ] 
        set pins [ get_pins -quiet $fin ] 
        if { [ sizeof_collection $ports ] == 0 &&  [ sizeof_collection $pins ] == 0 } {
            set reason "Unconnected"
        } elseif { [ sizeof_collection $ports ] != 0 && [ sizeof_collection $pins ] == 0 } {
            set port_name [ get_object_name $ports ]
            set reason "Only ports. $port_name "
        } elseif { [ sizeof_collection $ports ] == 0 && [ sizeof_collection $pins ] != 0} {
            set seq_cell  [ get_cells -of $pins -filter "is_sequential==true" ]
            set comb_cell  [ get_cells -of $pins -filter "is_sequential==false" ]
            if { [sizeof_collection $seq_cell] != 0} {
                set cell_count [ sizeof_collection $seq_cell ]   
                set reason "Pins has $cell_count sequential cell as fanin need further debug. "
            } else {
                set cell_count [ sizeof_collection $comb_cell ]
                set reason "Pins has $cell_count combo cell as fain in "
            }
        } else {
                set reason "Pins and ports area there as fanin"
        }
        puts [format "%-${max_length}s\t|\t $reason" $p]
    }
    close $fo
}
