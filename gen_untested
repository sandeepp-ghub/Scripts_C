set items {false_path const user_disable unknown no_startpoint_clock no_endpoint_clock}
set design [get_object_name [current_design]]
for {set  i 0} {$i < [llength $items]} {incr i} {
    set item [lindex $items $i]
    #report_analysis_coverage -check_type setup -exclude_untested [lreplace $items $i $i] -verbose untested  > ${design}_${item}_untested.rpt
    report_analysis_coverage -check_type {recovery clock_gating_setup setup} -exclude_untested [lreplace $items $i $i] -verbose untested  > ${design}_${item}_untested.rpt
}
check_timing -verbose -check_only {clock_expected} > ct1.rpt
check_timing -check_only {clocks_masked_by_another_clock clock_missing_at_sequential_output multiple_clock no_gen_clock_source master_clk_edge_not_reaching} -verbose   > ct_misc.rpt
check_timing -check_only {const_collision clock_gating_controlling_edge_unknown clock_gating_no_data } -verbose  > ct_misc1.rpt

exec /t11k/pnrwork35/users/kpavan/Scripts/scripts/p.sh
# grep "/" ct1.rpt | gawk '{print $1}' | sort -u > _t1.rpt
# cat *_endpoint*clock_*  | grep "clock" | grep "UNTESTED" | grep "Setup" | gawk '{print $2}' >> _t1.rpt
# cat _t1.rpt | sort -u | perl -p -i -e 's/\d+/*/gc' | sort -u > uncon.ep 

## foreach_in_collection p [get_pins pdPCIEPHYBOT_*/gpciephy_bot_PcieSerdes_x*_wrap_*_gen_lane_*__u_phy/TEST__SHIFT_CLK[*]] {echo [get_object_name [remove_from_collection [all_fanin -flat -to $p -startpoints_only] $p]] ==>  [get_object_name $p]}
