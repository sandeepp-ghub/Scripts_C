sh mkdir -p ./${::DEBUG_DIR_FOR_PT}
if ![info exists DESIGN] {set DESIGN [get_object_name [current_design]]}
proc clocks_on_pnr_pins {cell_list} {
    set i 0
    
    suppress_message SEL-003
    foreach_in_collection cell [get_cells $cell_list] {
	foreach_in_collection pin [sort_collection [get_pins -of $cell] full_name] {
	    #echo [get_object_name $pin]
	    incr i
	    set pindir [get_attribute $pin direction]
	    set net [get_nets -quiet -of $pin]
	    #set drpin [get_pins -quiet -leaf -of $net -filter "direction==out"]
	    set drpin [get_pins -quiet -leaf -of $net -filter "direction==out || direction==inout || direction==all"]
	    #set drpin [get_attribute -quiet  $net leaf_drivers]
	    set drpinclks_all [lsort -u [get_object_name [get_attribute -quiet $drpin clocks]]]
	    #echo "$i :: [get_object_name $pin]"
	    if {[llength $drpinclks_all] > 0 } {

		set num_clks [llength $drpinclks_all]
		foreach drpinclks $drpinclks_all {
		    set is_generated false
		    set div_factor 1
		    set gen_clk_name $drpinclks

		    if [get_attribute [get_clocks $drpinclks] is_generated] {
			set gen_clk_name $drpinclks
			set drpinclks [get_attribute [get_clocks $drpinclks] master_clock.full_name] ; 
			set is_generated true; 
			set div_factor [format %0.0f [expr [get_attribute [get_clocks $gen_clk_name] period] / [get_attribute [get_clocks $drpinclks] period]]] 
		    }
		    set master_period [format %0.3f [get_attribute [get_clocks $drpinclks] period]]
		    set gen_period [format %0.3f [get_attribute [get_clocks $gen_clk_name] period]]

		    #echo "$i :: [get_object_name $pin]"
		    set block    [get_attribute $pin cell.ref_name]
		    set pin_name [get_attribute $pin lib_pin_name]

		    set load_str "${pindir},1,${drpinclks},${gen_clk_name},${master_period},${gen_period},${is_generated},${div_factor}"

		    if {[info exists ${block}($pin_name)]} {
			set cur_value [set ${block}($pin_name)]
			set cur_period [lindex [split $cur_value \,] end-2]
			if {${cur_period} > ${gen_period}} {
			    set ${block}($pin_name) $load_str
			}
		    } else {
			set ${block}($pin_name) $load_str
		    }
		}
	    } 
	}

    }

    foreach  block [lsort -u [get_attribute [get_cells $cell_list] ref_name]] {
	#if ![info exists block] {set block [get_attribute [get_cells $cell] ref_name]}
	echo ""
	#echo "lappend pnr_block_name $block " >> ${DESIGN}_func_clocks_on_pnr_blocks.tcl
	foreach pin_name [array names ${block}] {
	    set cur_value [split [set ${block}($pin_name)] \,]
	    echo  [format "%-30s %-40s %-10s %-15s %-30s %-30s %-10s %-10s %-10s  %-55s" ${block}  ${pin_name} [lindex $cur_value 0] [lindex $cur_value 6] [lindex $cur_value 2]  [lindex $cur_value 3] [lindex $cur_value 4] [lindex $cur_value 5] [lindex $cur_value 7] ${cell_list}]
	    #echo  [format "%-30s %-55s %-10s %-15s %-30s %-30s %-10s %-10s %-10s" ${block}  ${pin_name} [lindex $cur_value 0] [lindex $cur_value 6] [lindex $cur_value 2]  [lindex $cur_value 3] [lindex $cur_value 4] [lindex $cur_value 5] [lindex $cur_value 7] ]
	}
	echo ""
    }
    unsuppress_message SEL-003
}

#Here is how I used it in mission mode:
#set homefile /user/noleksinski/clocks_on_pnr_blocks.rpt
if ![info exists DESIGN] {set DESIGN [get_object_name [current_design]]}

set homefile ./${::DEBUG_DIR_FOR_PT}/${DESIGN}_func_clocks_on_pnr_blocks.rpt
file delete -force $homefile
echo  [string repeat = 220]  > $homefile
echo  [format "%-30s  %-40s %-10s %-15s %-30s %-30s %-10s %-10s %-10s %-55s" BLOCK_NAME  PIN_NAME PIN_DIR IS_DIV MASTER_CLK GEN_CLK MAST_PERIOD GEN_PERIOD DIV_FACTOR INST_NAME]  >> $homefile
#echo  [format "%-30s  %-40s %-10s %-15s %-30s %-30s %-10s %-10s %-10s " BLOCK_NAME  PIN_NAME PIN_DIR IS_DIV MASTER_CLK GEN_CLK MAST_PERIOD GEN_PERIOD DIV_FACTOR ]  >> $homefile
echo  [string repeat = 220]  >> $homefile


#set pnr_blks_orig $pnr_blks

#foreach {block partition_instance } $PT_PARTITION_CONFIG_LIST(roc) {lappend pnr_blks $partition_instance}
#if {[get_object_name [current_design]] == "fc"} {
#    foreach {block partition_instance } $PT_PARTITION_CONFIG_LIST(fc) {lappend pnr_blks $partition_instance}
#}
#$pnr_blks
if {1} {
    foreach blk  [get_object_name [sort_collection [get_pnr] ref_name]] {
	echo "\nPROCESSING $blk ..."
	#echo "\nCLOCKS ON BLOCK: $blk" >> $homefile
	echo "\n" >> $homefile
	clocks_on_pnr_pins $blk >> $homefile
    }
}
#clocks_on_pnr_pins [sort_collection [get_pnr] ref_name] >> $homefile

echo "--I--  Generated ${homefile}"
set user $::env(USER)
catch {sh cat $homefile | mail -s "${DESIGN}_Functional_pnr_block_Clock_info" -a $homefile ${user}@marvell.com}
