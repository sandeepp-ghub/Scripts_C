#================================================================================
# Report Interface TranViolations 
# Author : Pavan K (kpavan@marvell.com)
# usage : reportInterfaceTimingVioNew
# usage : reportInterfaceTimingVioNew ReportDirectoryName
#================================================================================
alias rt report_timing -hpin 
proc reportInterfaceTimingVioNew {{outdir .} {block_list ""}} {
    set _st [clock seconds]
    suppress_message TCLCMD 927 513 917 746 1469
    set allfpcount [sizeof_collection [all_registers]]
    set top [get_object_name [current_design]]

    if [file exists $outdir] {} else {mkdir $outdir}

    #set block_list  [get_object_name [get_cells -quiet pd* -filter "is_hierarchical==true"]]
    if {$block_list == ""} {
	set block_list  [get_object_name [get_pnr]]
    }

    #set block_list pdpciemisc
    foreach inst $block_list {
	puts "Processing $inst ............."
	set rname [get_attribute [get_cells $inst] ref_name]
	set inst1 [regsub -all / $inst __]
	set outfile ${outdir}/${top}_${rname}_${inst1}_interfaceTim.vio.summary
	set outfilev ${outdir}/${top}_${rname}_${inst1}_interfaceTim.vio.verbose

	set fp [open $outfile w+]
	set fpv [open $outfilev w+]



	array set _tmp_hpin {}
	set path_coll ""
	catch {set path_coll [sort_collection [report_timing -collection -unique_pins -hpin -through [get_pins ${inst}/* -filter "is_hierarchical==true"] -max_paths $allfpcount -nworst 1 -max_slack 0] slack]}

	if { [sizeof_collection $path_coll] > 0 } {
	    
	    puts $fp [string repeat "-" 175]
	    puts $fpv [string repeat "-" 175]
	    puts $fp [format "%-50s  %-50s  %-20s %-20s  %-20s %-20s %-6s %6s"  "Launch_hpin-OUT" "Capture_hpin-IN"  "EPClk\(Period - MCP - EDGE - HPINC \)"  "\( LaunchDP == LaunchDP% \)" " \( IntfDP == IntfDP% \)" " \( CapDP ==  CapDP% \)" "Skew" "Slack"]
	    puts $fpv [format "%-50s  %-50s  %-20s %-20s  %-20s %-20s %-6s %6s"  "Launch_hpin-OUT" "Capture_hpin-IN"  "EPClk\(Period - MCP - EDGE - HPINC \)"  "\( LaunchDP == LaunchDP% \)" " \( IntfDP == IntfDP% \)" " \( CapDP ==  CapDP% \)" "Skew" "Slack"]
	    puts $fp [string repeat "-" 175]
	    puts $fpv [string repeat "-" 175]
	    
	    array unset _tmp_hpin
	    foreach_in_collection path $path_coll {

		set spclk [get_object_name [get_attribute $path startpoint_clock]]
		set epclk [get_object_name [get_attribute $path endpoint_clock]]


		set spclk_latency [expr [get_attribute $path startpoint_clock_latency] - [get_attribute $path launching_clock_open_edge_time]]
		set epclk_latency [expr [get_attribute $path endpoint_clock_latency] - [get_attribute $path capturing_clock_close_edge_time]]

		set skew [expr $epclk_latency - $spclk_latency]

		set arrival_time [get_attribute $path arrival]
		set datapath_delay [expr $arrival_time - $spclk_latency]

		set period [get_attribute [get_clocks $epclk] period]
		set slack [get_attribute $path slack]
		set phs [get_attribute $path phase_shift]
		if {$phs == "NA"} {set phs [get_attribute $path period]}
		set mcp [format %0.0f [expr ceil([expr $phs / [get_attribute $path period]])]]
		set hpoints  [filter_collection [get_attribute $path timing_points] @is_hierarchical==true]
		set hpointsc [sizeof_collection $hpoints]

		#########################################################
		
		if {$hpointsc >= 2}  {
		    set hpoints1 [filter_collection [filter_collection [get_attribute $path timing_points] @is_hierarchical==true] @full_name=~${inst}*]
		    if { [sizeof_collection $hpoints1] > 1} {
			set capture_hpin [get_object_name [get_pins [get_attribute $hpoints1 object] -filter "direction==in"]]
			set launch_hpin [get_object_name [get_pins [get_attribute $hpoints1 object] -filter "direction==out"]]
		    } else {
			if {[get_attribute [get_pins [get_attribute $hpoints1 object] ] direction] == "in"} {
			    set capture_hpin [get_object_name [get_pins [get_attribute $hpoints1 object] -filter "direction==in"]]
			    set launch_hpin [get_hpin $capture_hpin]
			} else {
			    set launch_hpin [get_object_name [get_pins [get_attribute $hpoints1 object] -filter "direction==out"]]
			    set capture_hpin [get_hpin $launch_hpin]
			}
		    }
		}

		#########################################################

		set processed 0
		if {[info exists _tmp_hpin(${launch_hpin})]} {
		    if {[lsearch -exact $_tmp_hpin(${launch_hpin}) $capture_hpin] > -1} {
			set processed 1
		    } else {
			set processed 0
			set _tmp_hpin(${launch_hpin}) "$_tmp_hpin(${launch_hpin}) $capture_hpin"
		    }
		} else {
		    set processed 0
		    set _tmp_hpin(${launch_hpin}) $capture_hpin
		}
		
		if {$processed} {
		} else {

		    #########################################################
		    if [get_attribute $path capturing_clock_is_inverted] {
			set capedge F  
			if {[get_attribute $path capturing_clock_close_edge_type] == "fall"} {
			    set capedge R
			}
		    } else {
			set capedge R 
			if {[get_attribute $path capturing_clock_close_edge_type] == "fall"} {
			    set capedge F
			}
		    }
		    if [get_attribute $path launching_clock_is_inverted] {
			set launchedge F
			if {[get_attribute $path launching_clock_open_edge_type] == "fall"} {
			    set launchedge R
			}
			
		    } else {
			set launchedge R
			if {[get_attribute $path launching_clock_open_edge_type] == "fall"} {
			    set launchedge F
			}

		    }
		    set caplaunchedge "${launchedge}${capedge}"
		    #########################################################
		    set capture_hpin_arrival 0
		    set launch_hpin_arrival 0
		    foreach_in_collection hpin $hpoints {
			set thpin [get_object_name [get_attribute $hpin object]]

			if {[lindex $launch_hpin 0] == [lindex $thpin 0] } {
			    set launch_hpin_arrival  [get_attribute $hpin arrival]
			}
			if {[lindex $capture_hpin 0] ==  [lindex $thpin 0]} {
			    set capture_hpin_arrival  [get_attribute $hpin arrival]
			}
		    }

		    

		    set launch_hpin_datapath [expr  $launch_hpin_arrival - $spclk_latency]
		    set launch_to_capture_hpin_datapath [expr  $capture_hpin_arrival - $launch_hpin_arrival]
		    set capture_hpin_datapath [expr $arrival_time - $launch_hpin_arrival - $launch_to_capture_hpin_datapath]

		    set total_dealy [expr $launch_hpin_datapath + $launch_to_capture_hpin_datapath + $capture_hpin_datapath]
		    set launchPercen [format "%0.2f" [expr $launch_hpin_datapath * 100.00 / $total_dealy]]
		    set intfPercen [format "%0.2f" [expr $launch_to_capture_hpin_datapath * 100.00 / $total_dealy]]
		    set capturePercen [format "%0.2f" [expr $capture_hpin_datapath * 100.00 / $total_dealy]]

		    set launchPercen [format "%0.2f" [expr $launch_hpin_datapath * 100.00 / $period]]
		    set intfPercen [format "%0.2f" [expr $launch_to_capture_hpin_datapath * 100.00 / $period]]
		    set capturePercen [format "%0.2f" [expr $capture_hpin_datapath * 100.00 / $period]]


		    puts $fp [format "%-65s  %-65s  %-20s %-20s  %-20s %-20s %-3.3f %-3.3f"  "${launch_hpin}" "${capture_hpin}"  "$epclk\($period - $mcp - $caplaunchedge - $hpointsc\)"  "\( $launch_hpin_datapath == $launchPercen \)" " \( $launch_to_capture_hpin_datapath == $intfPercen \)" " \( $capture_hpin_datapath ==  $capturePercen \)" $skew $slack]
		    puts $fpv [format "%-65s  %-65s  %-20s %-20s  %-20s %-20s %-3.3f %-3.3f"  "${launch_hpin}" "${capture_hpin}"  "$epclk\($period - $mcp - $caplaunchedge - $hpointsc\)"  "\( $launch_hpin_datapath == $launchPercen \)" " \( $launch_to_capture_hpin_datapath == $intfPercen \)" " \( $capture_hpin_datapath ==  $capturePercen \)" $skew $slack]

		    set _tmv ""
		    redirect -var _timv {rt -through ${launch_hpin} -through ${launch_hpin} -hpin -max_paths 1 -max_slack 0}
		    puts $fpv ""
		    puts $fpv "$_timv"
		    puts $fpv ""
		    set _tmv ""
		}
	    }
	    puts $fp [string repeat "-" 175]
	    puts $fpv [string repeat "-" 175]
	    
	}
	    close $fp
	    close $fpv

    }
    unsuppress_message TCLCMD 927 513 917 746 1469
    set _en [clock seconds]
    puts "RunTIme :: [expr $_en - $_st] seconds"
}
#================================================================================
alias intf_rpt_gen reportInterfaceTimingVioNew
echo "reportInterfaceTimingVioNew itf_tim_vio"
